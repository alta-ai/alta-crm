import { z } from "zod";

export const MRIFormSchema = z.object({
	id: z.string().uuid(),
	height: z.number(),
	weight: z.number(),
	has_pacemaker: z.boolean(),
	pacemaker_details: z.string().nullable(),
	had_brain_or_heart_surgery: z.boolean(),
	surgery_details: z.string().nullable(),
	surgery_date: z.string().nullable(),
	organs_removed: z.boolean(),
	organs_details: z.string().nullable(),
	organs_removed_date: z.string().nullable(),
	kidney_disease: z.boolean(),
	kidney_disease_details: z.string().nullable(),
	implants_metal_parts: z.boolean(),
	implants_details: z.string().nullable(),
	implants_date: z.string().nullable(),
	metallic_injuries: z.boolean(),
	injuries_details: z.string().nullable(),
	allergies: z.boolean(),
	allergies_details: z.string().nullable(),
	glaucoma: z.boolean(),
	preliminary_examinations: z.boolean(),
	preliminary_examinations_details: z.string().nullable(),
	preliminary_examinations_date: z.string().nullable(),
	infectious_disease: z.boolean(),
	infectious_disease_details: z.string().nullable(),
	blood_thinners: z.boolean(),
	blood_thinners_details: z.string().nullable(),
	blood_thinners_since: z.string().nullable(),
	other_medications: z.boolean(),
	other_medications_details: z.string().nullable(),
	claustrophobia: z.boolean(),
	pregnant: z.boolean().nullable(),
	last_menstruation: z.string().nullable(),
	breastfeeding: z.boolean().nullable(),
	consent_form_read: z.boolean(),
	created_at: z.coerce.date(),
	updated_at: z.coerce.date(),
});

// Infer TypeScript type from the Zod schema
export type MRIForm = z.infer<typeof MRIFormSchema>;
